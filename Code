!pip install pandas scikit-learn matplotlib seaborn
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import seaborn as sns
import matplotlib.pyplot as plt
# Sample mock data (replace with actual dataset)
data = {
    'fever': [1, 0, 1, 0, 1],
    'cough': [1, 1, 0, 1, 1],
    'fatigue': [0, 1, 1, 0, 1],
    'headache': [1, 0, 1, 1, 1],
    'disease': ['flu', 'cold', 'flu', 'cold', 'covid']
}

df = pd.DataFrame(data)
# Encode labels
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
df['disease'] = le.fit_transform(df['disease'])

# Features and target
X = df.drop('disease', axis=1)
y = df['disease']

# Train-test split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)
y_pred = model.predict(X_test)

print("Accuracy:", accuracy_score(y_test, y_pred))
print("Classification Report:\n", classification_report(y_test, y_pred))

# Confusion Matrix
sns.heatmap(confusion_matrix(y_test, y_pred), annot=True, fmt='d')
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()
import joblib
joblib.dump(model, "disease_prediction_model.pkl")
joblib.dump(le, "label_encoder.pkl")
